/** * LAB139 com.alsfox.lab139.utils 2015 */package com.wwxd.utilsimport java.math.BigIntegerimport java.nio.charset.StandardCharsetsimport java.security.MessageDigest/** * MD5加密工具类 */object MD5Util {    /**     * 小写md5加密     *     * @param sourceStr     * @return     */    fun md5(sourceStr: String): String {        var s = ""        try {            val strss = String(sourceStr.toByteArray(), StandardCharsets.UTF_8)            val source = strss.toByteArray()            val hexDigits = charArrayOf(                '0',                '1',                '2',                '3',                '4',                '5',                '6',                '7',                '8',                '9',                'a',                'b',                'c',                'd',                'e',                'f'            )            val md = MessageDigest.getInstance("MD5")            md.update(source)            val tmp = md.digest()            val str = CharArray(16 * 2)            var k = 0            for (i in 0..15) {                val byte0 = tmp[i]                str[k++] = hexDigits[byte0.toInt() ushr 4 and 0xf]                str[k++] = hexDigits[byte0.toInt() and 0xf]            }            s = String(str)        } catch (e: Exception) {            e.printStackTrace()        }        return s    }    fun md5_16(sourceStr: String): String {        val md5 = md5(sourceStr)        return md5!!.substring(8, 24)    }    fun MD5(str: String): String {        val hexDigits = charArrayOf(            '0',            '1',            '2',            '3',            '4',            '5',            '6',            '7',            '8',            '9',            'A',            'B',            'C',            'D',            'E',            'F'        )        return try {            val strss = String(str.toByteArray(), StandardCharsets.UTF_8)            val btInput = strss.toByteArray()            // 获得MD5摘要算法的 MessageDigest 对象            val mdInst = MessageDigest.getInstance("MD5")            // 使用指定的字节更新摘要            mdInst.update(btInput)            // 获得密文            val md = mdInst.digest()            // 把密文转换成十六进制的字符串形式            val j = md.size            val strs = CharArray(j * 2)            var k = 0            for (i in 0 until j) {                val byte0 = md[i]                strs[k++] = hexDigits[byte0.toInt() ushr 4 and 0xf]                strs[k++] = hexDigits[byte0.toInt() and 0xf]            }            String(strs)        } catch (e: Exception) {            e.printStackTrace()            str        }    }    fun MD5_16(sourceStr: String): String {        val md5 = MD5(sourceStr)        return md5.substring(8, 24)    }}